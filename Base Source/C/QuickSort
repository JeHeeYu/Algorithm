#include <stdio.h>

void QuickSort(int* list, int first, int last);
void Swap(int* pa, int *pb);
void PrintList(int* list, int size);

int main()
{
   int size = 10;
   int list[10] = {1, 10, 5, 8, 7, 6, 4, 3, 2, 9};
   
   QuickSort(list, 0, size -1);
   PrintList(list, size);
}

void QuickSort(int* list, int first, int last)
{
   if (first >= last)
   {
      return;
   }
   
   int pivot = first;
   int i = first + 1;
   int j = last;
   int temp;
   
   while (i <= j)
   {
      while(list[i] >= list[pivot])
      {    
         i++;
      }
      while(list[j] <= list[pivot] && j > first)
      {
         j--;
      }
      if(i > j)
      {
         Swap(&list[j], &list[pivot]);
      }
      else
      {
         Swap(&list[j], &list[i]);
      }
   }
   QuickSort(list, first, j - 1);
   QuickSort(list, j + 1, last);
}

void Swap(int* pa, int *pb)
{
   int temp = *pa;
   *pa = *pb;
   *pb = temp;   
}

void PrintList(int* list, int size)
{
   int i;
   
   for(i = 0; i < size; i++)
   {
      printf("%2d ", list[i]);
   }
   printf("\n");
}
